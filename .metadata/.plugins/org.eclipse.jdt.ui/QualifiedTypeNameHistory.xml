<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.Before"/>
    <fullyQualifiedTypeName name="com.bankingapplication.dto.AccountDto"/>
    <fullyQualifiedTypeName name="lombok.ToString"/>
    <fullyQualifiedTypeName name="ch.qos.logback.core.joran.conditional.IfAction"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.Pointcut"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.After"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.JoinPoint"/>
    <fullyQualifiedTypeName name="java.lang.Object"/>
    <fullyQualifiedTypeName name="java.lang.Long"/>
    <fullyQualifiedTypeName name="com.bankingapplication.dto.WithdrawRequest"/>
    <fullyQualifiedTypeName name="com.bankingapplication.entity.Account"/>
    <fullyQualifiedTypeName name="java.beans.beancontext.BeanContextServicesListener"/>
    <fullyQualifiedTypeName name="java.lang.ClassLoader"/>
    <fullyQualifiedTypeName name="com.firebase.FirebaseCrudApplication"/>
    <fullyQualifiedTypeName name="com.google.protobuf.compiler.PluginProtos.CodeGeneratorResponse.File"/>
    <fullyQualifiedTypeName name="com.google.api.client.util.Objects"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="java.util.Objects"/>
    <fullyQualifiedTypeName name="java.io.FileNotFoundException"/>
    <fullyQualifiedTypeName name="com.google.firebase.FirebaseOptions"/>
    <fullyQualifiedTypeName name="com.google.auth.oauth2.GoogleCredentials"/>
    <fullyQualifiedTypeName name="com.google.firebase.FirebaseApp"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="java.lang.InterruptedException"/>
    <fullyQualifiedTypeName name="com.firebase.FirebaseService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="com.google.firebase.cloud.FirestoreClient"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="com.google.cloud.firestore.WriteResult"/>
    <fullyQualifiedTypeName name="com.google.cloud.firestore.DocumentReference"/>
    <fullyQualifiedTypeName name="com.google.api.core.ApiFuture"/>
    <fullyQualifiedTypeName name="com.google.cloud.firestore.DocumentSnapshot"/>
    <fullyQualifiedTypeName name="com.firebase.Firebase"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.google.cloud.firestore.CollectionReference"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.SairajVegetables.Controller.CustomerController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.concurrent.ExecutionException"/>
    <fullyQualifiedTypeName name="org.apache.http.HttpStatus"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="com.SairajVegetables.service.FirebaseService"/>
    <fullyQualifiedTypeName name="com.SairajVegetables.dao.CustomerRequest"/>
    <fullyQualifiedTypeName name="com.google.cloud.firestore.FirestoreOptions"/>
    <fullyQualifiedTypeName name="com.google.cloud.firestore.Firestore"/>
    <fullyQualifiedTypeName name="com.google.api.gax.core.FixedCredentialsProvider"/>
    <fullyQualifiedTypeName name="com.google.auth.oauth2.ServiceAccountCredentials"/>
    <fullyQualifiedTypeName name="jakarta.annotation.PostConstruct"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="java.io.FileInputStream"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.config.annotation.WebMvcConfigurer"/>
</qualifiedTypeNameHistroy>
